/**
 * Core Functionality
 * APIs for managing your account balance. These endpoints are available with all Circle APIs.
 *
 * The version of the OpenAPI document: ${version}
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { BankDestination } from './bankDestination';
import { FiatMoneyUsd } from './fiatMoneyUsd';
import { PayoutBusinessAccountAdjustments } from './payoutBusinessAccountAdjustments';
import { PayoutErrorCode } from './payoutErrorCode';
import { RiskEvaluation } from './riskEvaluation';
import { UnwithdrawalObject } from './unwithdrawalObject';

export class DetailedPayout {
    /**
    * Unique system generated identifier for the entity.
    */
    'id'?: string;
    /**
    * The identifier of the source wallet used to fund a payout.
    */
    'sourceWalletId'?: string;
    'destination'?: BankDestination;
    'amount'?: FiatMoneyUsd;
    'fees'?: FiatMoneyUsd;
    /**
    * Status of the payout. Status `pending` indicates that the payout is in process; `complete` indicates it finished successfully; `failed` indicates it failed.
    */
    'status'?: DetailedPayout.StatusEnum;
    /**
    * A payout tracking reference. Will be present once known.
    */
    'trackingRef'?: any | null;
    /**
    * External network identifier which will be present once provided from the applicable network.   Examples: * **Input/Output Message Accountability Data (IMAD/OMAD)**: unique number given to each FedWire payment when using the Federal Reserve Bank Service which can be used to investigate and track wire transfers. 
    */
    'externalRef'?: string;
    'errorCode'?: PayoutErrorCode | null;
    'riskEvaluation'?: RiskEvaluation | null;
    'adjustments'?: PayoutBusinessAccountAdjustments | null;
    '_return'?: UnwithdrawalObject | null;
    /**
    * ISO-8601 UTC date/time format.
    */
    'createDate'?: string;
    /**
    * ISO-8601 UTC date/time format.
    */
    'updateDate'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "sourceWalletId",
            "baseName": "sourceWalletId",
            "type": "string"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "BankDestination"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "FiatMoneyUsd"
        },
        {
            "name": "fees",
            "baseName": "fees",
            "type": "FiatMoneyUsd"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "DetailedPayout.StatusEnum"
        },
        {
            "name": "trackingRef",
            "baseName": "trackingRef",
            "type": "any"
        },
        {
            "name": "externalRef",
            "baseName": "externalRef",
            "type": "string"
        },
        {
            "name": "errorCode",
            "baseName": "errorCode",
            "type": "PayoutErrorCode"
        },
        {
            "name": "riskEvaluation",
            "baseName": "riskEvaluation",
            "type": "RiskEvaluation"
        },
        {
            "name": "adjustments",
            "baseName": "adjustments",
            "type": "PayoutBusinessAccountAdjustments"
        },
        {
            "name": "_return",
            "baseName": "return",
            "type": "UnwithdrawalObject"
        },
        {
            "name": "createDate",
            "baseName": "createDate",
            "type": "string"
        },
        {
            "name": "updateDate",
            "baseName": "updateDate",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return DetailedPayout.attributeTypeMap;
    }
}

export namespace DetailedPayout {
    export enum StatusEnum {
        Pending = <any> 'pending',
        Complete = <any> 'complete',
        Failed = <any> 'failed'
    }
}
