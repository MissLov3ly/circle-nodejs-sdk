/**
 * Core Functionality
 * APIs for managing your account balance. These endpoints are available with all Circle APIs.
 *
 * The version of the OpenAPI document: ${version}
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Money } from './money';
import { TransferDestinationLocation } from './transferDestinationLocation';
import { TransferErrorCode } from './transferErrorCode';
import { TransferSourceLocation } from './transferSourceLocation';

/**
* A transfer of funds.
*/
export class Transfer {
    /**
    * Unique system generated identifier for the entity.
    */
    'id': string;
    'source': TransferSourceLocation;
    'destination': TransferDestinationLocation;
    'amount': Money;
    /**
    * A hash that uniquely identifies the onchain transaction. This is only available where either source or destination are of type blockchain.
    */
    'transactionHash'?: string;
    /**
    * Status of the transfer. Status `pending` indicates that the transfer is in the process of running; `complete` indicates it finished successfully; `failed` indicates it failed.
    */
    'status': Transfer.StatusEnum;
    'errorCode'?: TransferErrorCode | null;
    /**
    * The create date of the transfer.
    */
    'createDate'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "TransferSourceLocation"
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "TransferDestinationLocation"
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "Money"
        },
        {
            "name": "transactionHash",
            "baseName": "transactionHash",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Transfer.StatusEnum"
        },
        {
            "name": "errorCode",
            "baseName": "errorCode",
            "type": "TransferErrorCode"
        },
        {
            "name": "createDate",
            "baseName": "createDate",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return Transfer.attributeTypeMap;
    }
}

export namespace Transfer {
    export enum StatusEnum {
        Pending = <any> 'pending',
        Complete = <any> 'complete',
        Failed = <any> 'failed'
    }
}
